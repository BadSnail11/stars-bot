from aiogram.utils.keyboard import ReplyKeyboardBuilder, InlineKeyboardBuilder
from aiogram import types
from ..models import RequiredChannel
from typing import Optional

def admin_kb(is_super: bool = False, is_main: bool = False):
    kb = InlineKeyboardBuilder()
    kb.row(*[types.InlineKeyboardButton(text="üí≤ –¶–µ–Ω—ã", callback_data="pricing"), types.InlineKeyboardButton(text="üìä –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞", callback_data="statistics")])
    if is_super:
        kb.row(*[types.InlineKeyboardButton(text="üîó –ö–∞–Ω–∞–ª—ã", callback_data="channels"), types.InlineKeyboardButton(text="üì£ –†–∞—Å—Å—ã–ª–∫–∞", callback_data="broadcasts")])
    if is_main:
        kb.row(*[types.InlineKeyboardButton(text="–ü—Ä–µ–¥–æ—Å—Ç–∞–≤–∏—Ç—å —Å—É–ø–µ—Ä –ø—Ä–∞–≤–∞", callback_data="super")])
    return kb.as_markup()

def nav_to_menu():
    kb = InlineKeyboardBuilder()
    kb.row(types.InlineKeyboardButton(text="–ù–∞–∑–∞–¥", callback_data="back"))
    return kb.as_markup()

def pricing_kb():
    kb = InlineKeyboardBuilder()
    kb.row(types.InlineKeyboardButton(text="–ò–∑–º–µ–Ω–∏—Ç—å —Ü–µ–Ω—ã", callback_data="change_pricing"))
    kb.row(types.InlineKeyboardButton(text="–ù–∞–∑–∞–¥", callback_data="back"))
    return kb.as_markup()

def product_kb():
    kb = InlineKeyboardBuilder()
    kb.row(types.InlineKeyboardButton(text="–ó–≤–µ–∑–¥—ã", callback_data="change_stars"))
    kb.row(types.InlineKeyboardButton(text="–ü—Ä–µ–º–∏—É–º", callback_data="change_premium"))
    kb.row(types.InlineKeyboardButton(text="–ù–∞–∑–∞–¥", callback_data="back"))
    return kb.as_markup()

def channels_kb():
    kb = InlineKeyboardBuilder()
    kb.row(types.InlineKeyboardButton(text="–î–æ–±–∞–≤–∏—Ç—å –∫–∞–Ω–∞–ª", callback_data="add_channel"))
    kb.row(types.InlineKeyboardButton(text="–£–¥–∞–ª–∏—Ç—å –∫–∞–Ω–∞–ª –∫–∞–Ω–∞–ª", callback_data="delete_channel"))
    kb.row(types.InlineKeyboardButton(text="–ù–∞–∑–∞–¥", callback_data="back"))
    return kb.as_markup()

def list_channels_kb(channels: list[RequiredChannel]):
    kb = InlineKeyboardBuilder()
    for channel in channels:
        kb.row(types.InlineKeyboardButton(text=channel.channel_username, callback_data=f"delete_id_{channel.id}"))
    kb.row(types.InlineKeyboardButton(text="–ù–∞–∑–∞–¥", callback_data="back"))
    return kb.as_markup()

def broadcasts_kb():
    kb = types.InlineKeyboardMarkup(inline_keyboard=[
        [types.InlineKeyboardButton(text="üìù –°–æ–∑–¥–∞—Ç—å —Ä–∞—Å—Å—ã–ª–∫—É", callback_data="broadcasts_create")],
        [types.InlineKeyboardButton(text="‚¨ÖÔ∏è –ù–∞–∑–∞–¥", callback_data="back_to_menu")],
    ])
    return kb

def stats_root_kb():
    return types.InlineKeyboardMarkup(inline_keyboard=[
        [types.InlineKeyboardButton(text="üìÑ –ó–∞–∫–∞–∑—ã (—ç–∫—Å–ø–æ—Ä—Ç)", callback_data="st_orders")],
        [types.InlineKeyboardButton(text="üë• –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏ (—ç–∫—Å–ø–æ—Ä—Ç)", callback_data="st_users")],
        [types.InlineKeyboardButton(text="üîé –ó–∞–∫–∞–∑—ã –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è (—ç–∫—Å–ø–æ—Ä—Ç)", callback_data="st_user_orders")],
        [types.InlineKeyboardButton(text="‚¨ÖÔ∏è –í –º–µ–Ω—é", callback_data="back_to_menu")],
    ])

def orders_filter_kb(scope: str, user_id: Optional[int] = None):
    # scope: "all" | "user"
    uid_sfx = f"_{user_id}" if (scope == "user" and user_id is not None) else ""
    return types.InlineKeyboardMarkup(inline_keyboard=[
        [
            types.InlineKeyboardButton(text="‚úÖ –¢–æ–ª—å–∫–æ —É—Å–ø–µ—à–Ω—ã–µ", callback_data=f"st_do_{scope}_paid{uid_sfx}"),
            types.InlineKeyboardButton(text="–í—Å–µ", callback_data=f"st_do_{scope}_all{uid_sfx}")
        ],
        [types.InlineKeyboardButton(text="‚¨ÖÔ∏è –í —Ä–∞–∑–¥–µ–ª—ã", callback_data="statistics")]
    ])

def file_to_menu():
    kb = InlineKeyboardBuilder()
    kb.row(types.InlineKeyboardButton(text="–ù–∞–∑–∞–¥", callback_data="file_back"))
    return kb.as_markup()

def periods_kb(cbprefix: str, extra: Optional[str] = None):
    """
    cbprefix: 'st_do_all_paid', 'st_do_all_all', 'st_do_user_paid_<uid>', 'st_do_user_all_<uid>', 'st_do_users'
    —Ñ–æ—Ä–º–∏—Ä—É–µ–º: {prefix}_period_<key>  (–≥–¥–µ key in 24h|7d|30d)
    """
    sfx = f"_{extra}" if extra else ""
    return types.InlineKeyboardMarkup(inline_keyboard=[
        [
            types.InlineKeyboardButton(text="üïê 24 —á–∞—Å–∞", callback_data=f"{cbprefix}_period_24h{sfx}")
        ],
        [
            types.InlineKeyboardButton(text="üìÖ 7 –¥–Ω–µ–π", callback_data=f"{cbprefix}_period_7d{sfx}")
        ],
        [
            types.InlineKeyboardButton(text="üóì 1 –º–µ—Å—è—Ü", callback_data=f"{cbprefix}_period_30d{sfx}")
        ],
        [types.InlineKeyboardButton(text="‚¨ÖÔ∏è –í —Ä–∞–∑–¥–µ–ª—ã", callback_data="st_home")]
    ])